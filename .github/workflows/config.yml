name: Gatling Load Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  gatling:
    runs-on: ubuntu-latest

    env:
      MAVEN_OPTS: "-Xmx2g"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Gatling Simulation
        run: |
          chmod +x ./mvnw
          ./mvnw clean test-compile gatling:test -Dgatling.simulationClass=simulations.AuthDummyJSON

      - name: Debug - List contents of reports/
        run: |
          echo "Listing contents of ./reports"
          ls -R reports || echo "❌ reports directory does not exist"

      - name: Compress Gatling Report (clean zip)
        run: |
          REPORT_DIR=$(find reports -maxdepth 1 -type d -name 'authdummyjson-*' | sort | tail -n 1)
          if [ -z "$REPORT_DIR" ]; then
            echo "❌ No Gatling report folder found in ./reports"
            exit 1
          fi
          echo "✅ Found report folder: $REPORT_DIR"
          cd "$REPORT_DIR"
          zip -r ../../../gatling-report.zip .

      - name: Confirm Zip File Exists
        run: |
          if [ ! -f "gatling-report.zip" ]; then
            echo "❌ Zip file was not created"
            exit 1
          fi
          echo "✅ gatling-report.zip created"
          ls -lh gatling-report.zip

      - name: Upload Gatling Report Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gatling-report
          path: gatling-report.zip

      - name: Prepare clean publish folder
        run: |
          mkdir -p publish
          REPORT_DIR=$(find reports -maxdepth 1 -type d -name 'authdummyjson-*' | sort | tail -n 1)
          if [ -z "$REPORT_DIR" ]; then
            echo "❌ No report found for GitHub Pages."
            exit 1
          fi
          echo "✅ Copying report from: $REPORT_DIR"
          cp -r "$REPORT_DIR"/* publish/

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GATLING_API_TOKEN }}
          publish_dir: ./publish
          publish_branch: gh-pages